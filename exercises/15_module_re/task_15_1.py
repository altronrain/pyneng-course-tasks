# -*- coding: utf-8 -*-
"""
Задание 15.1

Создать функцию get_ip_from_cfg, которая ожидает как аргумент имя файла,
в котором находится конфигурация устройства.

Функция должна обрабатывать конфигурацию и возвращать IP-адреса и маски,
которые настроены на интерфейсах, в виде списка кортежей:
* первый элемент кортежа - IP-адрес
* второй элемент кортежа - маска

Например (взяты произвольные адреса):
[('10.0.1.1', '255.255.255.0'), ('10.0.2.1', '255.255.255.0')]

Для получения такого результата, используйте регулярные выражения.

Проверить работу функции на примере файла config_r1.txt.

Обратите внимание, что в данном случае, можно не проверять корректность IP-адреса,
диапазоны адресов и так далее, так как обрабатывается вывод команды,
а не ввод пользователя.

Пример вызова функции
In [10]: get_ip_from_cfg("config_r1.txt")
Out[10]:
[('10.1.1.1', '255.255.255.255'),
 ('10.0.13.1', '255.255.255.0'),
 ('10.0.19.1', '255.255.255.0')]

"""
import re
import os

PATH = "/home/altron/Documents/repos/pyneng-course-tasks/exercises/15_module_re"

def get_ip_from_cfg(filename):
    ip_mask_list = []
    regex = r"address ([0-9.]+) ([0-9.]+)"
    with open(os.path.join(PATH, filename)) as f:
        output = f.read()
    
    rmatch = re.finditer(regex, output)
    for m in rmatch:
        ip_mask_list.append(m.groups())
    
    return ip_mask_list

if __name__ == "__main__":
    print(get_ip_from_cfg("config_r1.txt"))
    